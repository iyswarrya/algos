/*
 ============================================================================
 Name        : string.c
 Author      : ishu
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>

/*char *string_reverse(char *str){
	int i,len;
	len = strlen(str);

	for(i = 0;i<len/2 ;i++){
		char temp = *(str+i);
 *(str+i) = *(str+len-i-1);
 *(str+len-i-1) = temp;
	}

	return str;
}

void split(char *str){
	char *token;
	char a,b,c;
	a = '-';
	b = '*';
	c = '+';

	token = strtok(str,"-");
	printf("%s%c",string_reverse(token),a);
	token = strtok(0,"*");
	printf("%s%c",string_reverse(token),b);
	token = strtok(0,"+");
	printf("%s%c",string_reverse(token),c);
	printf("%s",strtok(0,"\0"));
	return;
}

int main(void) {
	char str[] = "1+2*3-20";
	string_reverse(str);
	split(str);
	return EXIT_SUCCESS;
}*/

//**********rotating an array *********
/*int * rotate(int * array,int *array1,int k,int n){

	for(int j = k, p=0; j<n, p<n-k; j++, p++){
			*(array1+j) = *(array+p);
	}

	for(int q =0, r=n-k; q < k,r<n; q++,r++){
		*(array1+q) = *(array+r);
	}

	return array1;
}

int main(){
	int a[] = {1,2,3,4,5,6,7,8,9};
	int n = sizeof(a)/sizeof(int);
	int *b = (int*)malloc(sizeof(n));
	b = rotate(a,b,7,n);
	for(int j=0;j<n;j++){
		printf("%d\n",*(b+j));
	}
	return 0;
}*/

//******************************************

// ************reverse words in a string**********

/*char *reverse(char *str){
	int size = strlen(str);

	for(int i =0;i<size/2;i++){
		char temp = *(str+i);
		*(str+i) = *(str+size-1-i);
		*(str+size-1-i) = temp;
	}
	return str;
}

void split(char *str){
	char *token;
	token = strtok(str," ");
	while(token != NULL){
		printf("%s%s",reverse(token)," ");
		token = strtok(NULL," ");
	}
}
int main(){
	char a[]="The sky is blue";
	reverse(a);
	//printf("%s\n",a);
	split(a);
	return 0;
}*/

//*****************upper case check**************

/*void capitals(char *str){
	int i,j,k;
	i=k=0;
	j=1;
	int size = strlen(str);

	while(*(str+i) >= 97  && i<=size){
		i++;
		if(i == size){
			printf("true\n");
			return;
		}
	}

	if(*(str)<97)
		while (*(str+j)>=97  && j<=size){
		j++;
		if(j == size){
			printf("true\n");
			return;
		}
	}

	while(*(str+k) < 97  && k<=size){
		k++;
		if(k == size){
			printf("true\n");
			return;
		}
		}
	printf("false\n");
		return;
}


void detectCapitals(char * str){
	bool isCamel = false;
	bool isallupper = false;
	bool isalllower = false;
	bool isCamelX = false;
	bool isallupperX = false;
	bool isalllowerX = false;
	if(*(str) < 97){


		if(*(str+1) > 97){
			isCamelX = true;
			isCamel = true;
		}else{
			isallupperX = true;
			isallupper = true;
		}
	}else{
		isalllower = true;
		isalllowerX = true;
	}
	printf("______________%s____________\n\n",str);
	for(int i=1;i<strlen(str);i++){
		if(isallupperX){
			if(*(str+i) > 97){
				isallupperX=false;
				//printf("incorrect\n");
			}
		}
		if(isalllowerX){
			if(*(str+i) < 97){
				isalllowerX=false;
				//printf("incorrect\n");
			}
		}
		if(isCamelX){
			if(*(str+i) < 97){
				isCamelX=false;
				//printf("incorrect\n");
			}
		}
	}
	if(isallupper && !isallupperX){
		printf("incorrect-isallupper\n");
	}
	if(isCamel && !isCamelX){
		printf("incorrect-isCamel\n");
	}
	if(isalllower && !isalllowerX){
		printf("incorrect-isalllower\n");
	}
}*/

//****************strcat**************

char *concatenation(char *str1, char *str2){
	strcat(&str1,&str2);
	return str1;
}

//
int main(){
//	capitals("flaG");
//	capitals("USA");
//	capitals("america");
//	capitals("Google");
	/*printf("########################\n");
	detectCapitals("flaG");
	detectCapitals("fLAg");
	detectCapitals("USA");
	detectCapitals("america");
	detectCapitals("Google");*/
	char *str = concatenation("dog","cat");
	return 0;
}
